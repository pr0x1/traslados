
        //RecyclerViewSwipeListener swipe = new RecyclerViewSwipeListener(false);
        //rvContacts.setOnFlingListener(swipe);
        // That's all!
      /* rvContacts.setOnFlingListener(new RecyclerViewSwipeListener(false) {
            @Override
            public void onSwipeDown() {
                Toast.makeText(TableCard.this, "swipe down", Toast.LENGTH_SHORT).show();
            }

            @Override
            public void onSwipeUp() {
                Toast.makeText(TableCard.this, "swipe up", Toast.LENGTH_SHORT).show();
            }
        });*/

       /* SwipeDismissRecyclerViewTouchListener listener = new SwipeDismissRecyclerViewTouchListener.Builder(
                rvContacts,
                new SwipeDismissRecyclerViewTouchListener.DismissCallbacks() {
                    @Override
                    public boolean canDismiss(int position) {
                        return true;
                    }

                    @Override
                    public void onDismiss(View view) {
                        int   id =  rvContacts.getChildAdapterPosition(view);
                        adapter.getmContacts().remove(id);
                        adapter.notifyDataSetChanged();

                        Toast.makeText(getBaseContext(), String.format("Delete item %d",id),Toast.LENGTH_LONG).show();
                    }
                })
                .setIsVertical(false).create();
                /*.setItemTouchCallback(
                        new SwipeDismissRecyclerViewTouchListener.OnItemTouchCallBack() {
                            @Override
                            public void onTouch(int index) {
                                showDialog(String.format("Click item %d", index));
                              //  Toast.makeText(getBaseContext(), String.format("Delete item %d",index),Toast.LENGTH_LONG).show();
                            }
                        })
                .create();

        rvContacts.setOnTouchListener(listener);*/